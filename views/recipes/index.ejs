<% include ../partials/header %>

<div class="row main-content">
        <button id="test-button">Keep Gnocchi only</button>
</div>
<div id="full-content">
    <div class="grid-wrapper">
        <div class="jumbotron">
            <h1>Aad & Manon's recipe library</h1>
            <p>Favorite recipes and new ones to experiment with !</p>
            <p>
                <a class="btn btn-primary btn-lg" href="/recipes/new">Enter new recipe</a>
            </p>
        </div>
        <div id="link-list" class="">
            <p class="">Favorite recipe creators</p>
            <div class="list-group">
                <li class="list-group-item">Link 1</li>
                <li class="list-group-item">Link 2</li>
                <li class="list-group-item">Link 3</li>
            </div>
        </div>
        <div class="recipe-show">
            <div style="display: block;">
            <h3>Our favorite recipes</h3>
            <input id="filter"  type="text" name="filter" placeholder="Enter your filter here">
            <button id="reset">Delete filters</button>
            </div>
            <% recipes.forEach(function(recipe){ %>
            <div class="recipe-card thumbnail">
                    <img src="<%= recipe.image %>">
                    <h4><%= recipe.name %></h4>
                    <p>
                        <a href="/recipes/<%= recipe._id %>" class="btn btn-primary">More details</a>
                    </p>
            </div>
            <% }); %>
            
            <div id="filteredRecipes"></div>
        </div>
    </div>
</div>

<script>
    
    var testButton = document.getElementById("test-button");
    var resetButton = document.getElementById("reset");
    var recipeList = document.getElementsByClassName("recipe-show");
    var recipeThumbnails = document.getElementsByClassName('recipe-card');
    let recipes;
    let recipesFilter;
    let recipesFilteredNames = [];
    
    fetch('/recipes/raw')
        .then((response) =>{
            return response.json();
        })
        .then((myJson) => {
            // console.log(myJson);
            recipes = myJson;
            //Examples of filter
            const recipesFiltered = recipes.filter(r => r.name.toLowerCase().includes("p") > 0); // recipes with a P
            // console.log(recipesFiltered);
            const recipesFiltered2 = recipes.filter(r => r.name.toLowerCase().includes("p") && r.cookingTime.includes("45") > 0); // recipes with a P and more than 45 minutes of cooking
            // console.log(recipesFiltered2);
            recipesFilter = recipes;
            // Adding recipes
            const filteredRecipes = document.getElementById("filteredRecipes");
            fillRecipesFilter(recipesFilter, filteredRecipes);
        });
    function filterEnLive(theInput){
        // console.log(theInput.target.value);
        recipesFilter = recipes.filter(r => r.name.toLowerCase().includes(theInput.target.value) > 0);
        // console.log(recipesFilter);
        const filteredRecipes = document.getElementById("filteredRecipes");
        while (filteredRecipes.firstChild) {
            filteredRecipes.removeChild(filteredRecipes.firstChild);
        }
        // Adding recipes
        fillRecipesFilter(recipesFilter, filteredRecipes);
    }
    function fillRecipesFilter(recipesFilter, filteredRecipes){
        recipesFilteredNames = [];
        recipesFilter.forEach(recipe => {
            //console.log(recipe);
            // var recipeNode = document.createElement("p");
            // recipeNode.textContent = recipe.name;
            // filteredRecipes.appendChild(recipeNode);
            recipesFilteredNames.push(recipe.name);
        });
            for(var i = recipeThumbnails.length - 1; i >= 0; i--){
                if(recipesFilteredNames.indexOf(recipeThumbnails[i].childNodes[3].textContent.toString()) === -1){
                    // console.log(recipeThumbnails[i].childNodes[3].innerHTML + recipe.name);
                    recipeThumbnails[i].classList.add("invisible");
                };
            };
        
    }
    window.addEventListener("input", filterEnLive);

    resetButton.addEventListener("click", function(){
        for(var i = recipeThumbnails.length - 1; i >= 0; i--){
            recipeThumbnails[i].classList.remove("invisible");;
        };
    });

    //-------------- BUTTON TEST --------------//
// testButton.addEventListener("click", function(){
// //checking recipes one by one in reverse order and deleting the non-matching ones
// for(var j = 0; j < recipesFilteredNames.length; j++){
//     for(var i = recipeThumbnails.length - 1; i >= 0; i--){
//         if(recipeThumbnails[i].childNodes[3].textContent.toString().indexOf(recipesFilteredNames[j]) === -1){
//             // console.log("Author is: " + recipeThumbnails[i].childNodes[3].innerHTML);
//             recipeThumbnails[i].parentNode.removeChild(recipeThumbnails[i]);  
//         };
//     };
// }
// });
    </script>

<!-- <script>
var testButton = document.getElementById("test-button");
var recipeList = document.getElementsByClassName("recipe-show");
var recipeThumbnails = document.getElementsByClassName('recipe-card');
document.getElementById("test-case").innerHTML = "Hello World!";


testButton.addEventListener("click", function(){
    //checking recipes one by one in reverse order and deleting the non-matching ones
    for(var i = recipeThumbnails.length - 1; i >= 0; i--){
        if(recipeThumbnails[i].childNodes[3].textContent.toString().indexOf("Gnocchi") === -1){
            console.log("Author is: " + recipeThumbnails[i].childNodes[3].innerHTML);
            recipeThumbnails[i].parentNode.removeChild(recipeThumbnails[i]);  
        };
    };
});
</script> -->

<% include ../partials/footer %>